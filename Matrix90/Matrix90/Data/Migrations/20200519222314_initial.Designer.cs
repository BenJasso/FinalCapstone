// <auto-generated />
using System;
using Matrix90.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Matrix90.Data.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20200519222314_initial")]
    partial class initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Matrix90.Models.CustomerActivityInfo", b =>
                {
                    b.Property<int>("CustomerActivityInfoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("AccessToFacility")
                        .HasColumnType("bit");

                    b.Property<int>("CustomerId")
                        .HasColumnType("int");

                    b.Property<int>("RoutineDaysAWeek")
                        .HasColumnType("int");

                    b.Property<int>("RoutineTimePerDay")
                        .HasColumnType("int");

                    b.Property<bool>("WorkoutRoutine")
                        .HasColumnType("bit");

                    b.HasKey("CustomerActivityInfoId");

                    b.ToTable("CustomerActivityInfos");
                });

            modelBuilder.Entity("Matrix90.Models.CustomerEatingHabits", b =>
                {
                    b.Property<int>("CustomerEatingHabitsId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AdditionalInfo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CustomerId")
                        .HasColumnType("int");

                    b.Property<int>("DrinkAlcoholAmount")
                        .HasColumnType("int");

                    b.Property<int>("DrinkSodaAmount")
                        .HasColumnType("int");

                    b.Property<string>("FavoriteFoods")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("FoodAllergies")
                        .HasColumnType("bit");

                    b.Property<string>("KindOfFoodAllergies")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NonFavoriteFoods")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TypicalBreakfast")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TypicalDinner")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TypicalLunch")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TypicalSnack")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CustomerEatingHabitsId");

                    b.ToTable("CustomerEatingHabitss");
                });

            modelBuilder.Entity("Matrix90.Models.CustomerMeasurements", b =>
                {
                    b.Property<int>("CustomerMeasurementsId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CurrentWeight")
                        .HasColumnType("int");

                    b.Property<int>("CustomerId")
                        .HasColumnType("int");

                    b.Property<int>("Forearm")
                        .HasColumnType("int");

                    b.Property<int>("GoalWeight")
                        .HasColumnType("int");

                    b.Property<int>("Height")
                        .HasColumnType("int");

                    b.Property<int>("Hips")
                        .HasColumnType("int");

                    b.Property<int>("Waist")
                        .HasColumnType("int");

                    b.Property<int>("Wrist")
                        .HasColumnType("int");

                    b.HasKey("CustomerMeasurementsId");

                    b.ToTable("CustomerMeasurementss");
                });

            modelBuilder.Entity("Matrix90.Models.CustomerMedicalInfo", b =>
                {
                    b.Property<int>("CustomerMedicalInfoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AdditionalInfo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CustomerId")
                        .HasColumnType("int");

                    b.Property<string>("GastroInfo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("GastroIntestinalDiscomfort")
                        .HasColumnType("bit");

                    b.Property<string>("Injuries")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MedicalConditions")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhysicalActivityLimitations")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CustomerMedicalInfoId");

                    b.ToTable("CustomerMedicalInfos");
                });

            modelBuilder.Entity("Matrix90.Models.CustomerRecordBook", b =>
                {
                    b.Property<int>("CustomerRecordBookId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CustomerId")
                        .HasColumnType("int");

                    b.HasKey("CustomerRecordBookId");

                    b.ToTable("CustomerRecordBooks");
                });

            modelBuilder.Entity("Matrix90.Models.CustomerTypicalDayInfo", b =>
                {
                    b.Property<int>("CustomerTypicalDayInfoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AdditionalInfo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("BedTime")
                        .HasColumnType("float");

                    b.Property<double>("BreakfastTime")
                        .HasColumnType("float");

                    b.Property<int>("CustomerId")
                        .HasColumnType("int");

                    b.Property<double>("DinnerTime")
                        .HasColumnType("float");

                    b.Property<bool>("EatingTimeFlexibility")
                        .HasColumnType("bit");

                    b.Property<double>("LunchTime")
                        .HasColumnType("float");

                    b.Property<int>("NightlyWakeUps")
                        .HasColumnType("int");

                    b.Property<bool>("SleepDifficulty")
                        .HasColumnType("bit");

                    b.Property<bool>("SnackDuringDay")
                        .HasColumnType("bit");

                    b.Property<double>("SnackDuringDayTimes")
                        .HasColumnType("float");

                    b.Property<double>("WakeUpTime")
                        .HasColumnType("float");

                    b.HasKey("CustomerTypicalDayInfoId");

                    b.ToTable("CustomerTypicalDayInfos");
                });

            modelBuilder.Entity("Matrix90.Models.CustomerWorkInfo", b =>
                {
                    b.Property<int>("CustomerWorkInfoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ActivityLevel")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AdditionalInfo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("BringLunchAbility")
                        .HasColumnType("bit");

                    b.Property<int>("CustomerId")
                        .HasColumnType("int");

                    b.Property<string>("DailyWorkHours")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Occupation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("ScheduledBreaks")
                        .HasColumnType("bit");

                    b.Property<string>("Shift")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WorkDays")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CustomerWorkInfoId");

                    b.ToTable("CustomerWorkInfos");
                });

            modelBuilder.Entity("Matrix90.Models.FavoriteTip", b =>
                {
                    b.Property<int>("FavoriteTipId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CustomerId")
                        .HasColumnType("int");

                    b.Property<int>("TipOfWeekId")
                        .HasColumnType("int");

                    b.HasKey("FavoriteTipId");

                    b.ToTable("FavoriteTips");
                });

            modelBuilder.Entity("Matrix90.Models.NutritionPlan", b =>
                {
                    b.Property<int>("NutritionPlanId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CustomerId")
                        .HasColumnType("int");

                    b.Property<string>("Meal1Carb")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Meal1CarbSize")
                        .HasColumnType("int");

                    b.Property<string>("Meal1Entree")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Meal1EntreeSize")
                        .HasColumnType("int");

                    b.Property<double>("Meal1Time")
                        .HasColumnType("float");

                    b.Property<string>("Meal1Vegetable")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Meal1VegetableSize")
                        .HasColumnType("int");

                    b.Property<string>("Meal2Carb")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Meal2CarbSize")
                        .HasColumnType("int");

                    b.Property<string>("Meal2Entree")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Meal2EntreeSize")
                        .HasColumnType("int");

                    b.Property<double>("Meal2Time")
                        .HasColumnType("float");

                    b.Property<string>("Meal2Vegetable")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Meal2VegetableSize")
                        .HasColumnType("int");

                    b.Property<string>("Meal3Carb")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Meal3CarbSize")
                        .HasColumnType("int");

                    b.Property<string>("Meal3Entree")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Meal3EntreeSize")
                        .HasColumnType("int");

                    b.Property<double>("Meal3Time")
                        .HasColumnType("float");

                    b.Property<string>("Meal3Vegetable")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Meal3VegetableSize")
                        .HasColumnType("int");

                    b.Property<string>("Meal4Carb")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Meal4CarbSize")
                        .HasColumnType("int");

                    b.Property<string>("Meal4Entree")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Meal4EntreeSize")
                        .HasColumnType("int");

                    b.Property<double>("Meal4Time")
                        .HasColumnType("float");

                    b.Property<string>("Meal4Vegetable")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Meal4VegetableSize")
                        .HasColumnType("int");

                    b.Property<string>("Meal5Carb")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Meal5CarbSize")
                        .HasColumnType("int");

                    b.Property<string>("Meal5Entree")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Meal5EntreeSize")
                        .HasColumnType("int");

                    b.Property<double>("Meal5Time")
                        .HasColumnType("float");

                    b.Property<string>("Meal5Vegetable")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Meal5VegetableSize")
                        .HasColumnType("int");

                    b.Property<string>("Meal6Carb")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Meal6CarbSize")
                        .HasColumnType("int");

                    b.Property<string>("Meal6Entree")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Meal6EntreeSize")
                        .HasColumnType("int");

                    b.Property<double>("Meal6Time")
                        .HasColumnType("float");

                    b.Property<string>("Meal6Vegetable")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Meal6VegetableSize")
                        .HasColumnType("int");

                    b.Property<string>("Snack1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Snack1Size")
                        .HasColumnType("int");

                    b.Property<double>("Snack1Time")
                        .HasColumnType("float");

                    b.Property<string>("Snack2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Snack2Size")
                        .HasColumnType("int");

                    b.Property<double>("Snack2Time")
                        .HasColumnType("float");

                    b.Property<string>("Snack3")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Snack3Size")
                        .HasColumnType("int");

                    b.Property<double>("Snack3Time")
                        .HasColumnType("float");

                    b.Property<string>("Supplement1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Supplement2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Supplement3")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("NutritionPlanId");

                    b.ToTable("NutritionPlans");
                });

            modelBuilder.Entity("Matrix90.Models.Nutritionist", b =>
                {
                    b.Property<int>("NutritionistId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IdentityUserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("PhoneNumber")
                        .HasColumnType("float");

                    b.HasKey("NutritionistId");

                    b.HasIndex("IdentityUserId");

                    b.ToTable("Nutritionists");
                });

            modelBuilder.Entity("Matrix90.Models.Recipe", b =>
                {
                    b.Property<int>("RecipeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<byte[]>("RecipeImage")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("RecipeInfo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Type")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("RecipeId");

                    b.ToTable("Recipes");
                });

            modelBuilder.Entity("Matrix90.Models.TipOfWeek", b =>
                {
                    b.Property<int>("TipOfWeekId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("SubjectName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Tip")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("TipOfWeekId");

                    b.ToTable("TipOfWeeks");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<string>("NormalizedName")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles");

                    b.HasData(
                        new
                        {
                            Id = "f1b100cf-32ad-48c0-b4ad-92e293066e4c",
                            ConcurrencyStamp = "064113d2-366d-4ee2-8a4c-6e6c9310c9e1",
                            Name = "Customer",
                            NormalizedName = "CUSTOMER"
                        },
                        new
                        {
                            Id = "db577175-6152-4eb8-9dee-ef233d930bed",
                            ConcurrencyStamp = "195ec22b-faaf-4cfb-a554-a2d7bdf881a3",
                            Name = "Nutritionist",
                            NormalizedName = "NUTRITIONIST"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<string>("NormalizedUserName")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(128)")
                        .HasMaxLength(128);

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(128)")
                        .HasMaxLength(128);

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(128)")
                        .HasMaxLength(128);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(128)")
                        .HasMaxLength(128);

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens");
                });

            modelBuilder.Entity("Matrix90.Models.Nutritionist", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", "IdentityUser")
                        .WithMany()
                        .HasForeignKey("IdentityUserId");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
